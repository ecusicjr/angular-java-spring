{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/api.service.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiService {\n\n  constructor(private http: HttpClient) { }\n\n  getQuestions() {\n    return this.http.get('/questions');\n  }\n\n  getAnswers(questionID) {\n    return this.http.get(`/questions/${questionID}/answers`)\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ApiService } from './api.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  title = 'Questions and Answers';\n  questions: any = [];\n\n  constructor(private api: ApiService) {}\n\n  ngOnInit() {\n    this.getQuestions();\n  }\n\n  getQuestions() {\n    this.api.getQuestions()\n      .subscribe(data => {\n        this.questions = data['content'];\n        this.getAnswers();\n      });\n  }\n\n  getAnswers() {\n    this.questions = this.questions.map(question => {\n      const answers: any = [];\n      this.api.getAnswers(question.id)\n        .subscribe(data => {\n          for (const d of (data as any)){\n            answers.push({\n              text: d.text,\n            });\n          }\n        });\n        question.answers = answers;\n        return question;\n    })\n  }\n}\n","<mat-toolbar>\n  <span>{{ title }}</span>\n</mat-toolbar>\n<div [className]=\"question\" *ngFor=\"let question of questions\">\n  Q: {{ question.title }}\n  <ul>\n    <li *ngFor=\"let answer of question.answers\">A: {{ answer.text }}</li>\n  </ul>\n</div>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { MatToolbarModule } from '@angular/material/toolbar';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    BrowserAnimationsModule,\n    MatToolbarModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}