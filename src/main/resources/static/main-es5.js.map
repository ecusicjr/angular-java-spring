{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/api.service.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","ApiService","http","get","questionID","providedIn","AppComponent","api","title","questions","getQuestions","subscribe","data","getAnswers","map","question","answers","d","push","text","selector","templateUrl","styleUrls","AppModule","declarations","imports","providers","bootstrap","environment","production","bootstrapModule","catch","err","console","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiService {\n\n  constructor(private http: HttpClient) { }\n\n  getQuestions() {\n    return this.http.get('/questions');\n  }\n\n  getAnswers(questionID) {\n    return this.http.get(`/questions/${questionID}/answers`)\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ApiService } from './api.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  title = 'Questions and Answers';\n  questions: any = [];\n\n  constructor(private api: ApiService) {}\n\n  ngOnInit() {\n    this.getQuestions();\n  }\n\n  getQuestions() {\n    this.api.getQuestions()\n      .subscribe(data => {\n        this.questions = data['content'];\n        this.getAnswers();\n      });\n  }\n\n  getAnswers() {\n    this.questions = this.questions.map(question => {\n      const answers: any = [];\n      this.api.getAnswers(question.id)\n        .subscribe(data => {\n          for (const d of (data as any)){\n            answers.push({\n              text: d.text,\n            });\n          }\n        });\n        question.answers = answers;\n        return question;\n    })\n  }\n}\n","<mat-toolbar>\n  <span>{{ title }}</span>\n</mat-toolbar>\n<div [className]=\"question\" *ngFor=\"let question of questions\">\n  Q: {{ question.title }}\n  <ul>\n    <li *ngFor=\"let answer of question.answers\">A: {{ answer.text }}</li>\n  </ul>\n</div>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { MatToolbarModule } from '@angular/material/toolbar';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    BrowserAnimationsModule,\n    MatToolbarModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}