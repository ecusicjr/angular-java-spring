{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/api.service.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","ApiService","http","get","questionID","question","post","title","answer","text","providedIn","AppComponent","api","fb","questions","errorHandling","control","error","myForm","controls","hasError","reactiveForm","getQuestions","group","required","formValue","value","postQuestion","subscribe","data","console","log","postAnswer","getAnswers","map","answers","d","push","submitForm","selector","templateUrl","styleUrls","AppModule","declarations","imports","providers","bootstrap","environment","production","bootstrapModule","catch","err"],"mappings":";;;;;;;;;;;;;;;;;AAAA,aAASA,wBAAT,CAAkCC,GAAlC,EAAuC;AACtC;AACA;AACA,aAAOC,OAAO,CAACC,OAAR,GAAkBC,IAAlB,CAAuB,YAAW;AACxC,YAAIC,CAAC,GAAG,IAAIC,KAAJ,CAAU,yBAAyBL,GAAzB,GAA+B,GAAzC,CAAR;AACAI,SAAC,CAACE,IAAF,GAAS,kBAAT;AACA,cAAMF,CAAN;AACA,OAJM,CAAP;AAKA;;AACDL,4BAAwB,CAACQ,IAAzB,GAAgC,YAAW;AAAE,aAAO,EAAP;AAAY,KAAzD;;AACAR,4BAAwB,CAACG,OAAzB,GAAmCH,wBAAnC;AACAS,UAAM,CAACC,OAAP,GAAiBV,wBAAjB;AACAA,4BAAwB,CAACW,EAAzB,GAA8B,yCAA9B;;;;;;;;;;;;;;;;ACZA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAMaC,U;;;AAEX,0BAAoBC,IAApB,EAAsC;AAAA;;AAAlB,aAAAA,IAAA,GAAAA,IAAA;AAAqB;;;;uCAE1B;AACb,iBAAO,KAAKA,IAAL,CAAUC,GAAV,CAAc,YAAd,CAAP;AACD;;;mCAEUC,U,EAAY;AACrB,iBAAO,KAAKF,IAAL,CAAUC,GAAV,sBAA4BC,UAA5B,cAAP;AACD;;;qCAEYC,Q,EAAQ;AACnB,iBAAO,KAAKH,IAAL,CAAUI,IAAV,CAAe,YAAf,EAA6B;AAClCC,iBAAK,EAAEF;AAD2B,WAA7B,CAAP;AAGD;;;mCAEUD,U,EAAYI,M,EAAM;AAC3B,iBAAO,KAAKN,IAAL,CAAUI,IAAV,sBAA6BF,UAA7B,eAAmD;AACxDK,gBAAI,EAAED;AADkD,WAAnD,CAAP;AAGD;;;;;;;uBAtBUP,U,EAAU,uH;AAAA,K;;;aAAVA,U;AAAU,eAAVA,UAAU,K;AAAA,kBAFT;;;;;sEAEDA,U,EAAU;cAHtB,wDAGsB;eAHX;AACVS,oBAAU,EAAE;AADF,S;AAGW,Q;;;;;;;;;;;;;;;;;;;;;;ACNvB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACOI;;AACE;;AAAmB;;AAAQ;;AAAQ;;AAAS;;AAC9C;;;;;;AAKA;;AACE;;AAAoB;;AAAQ;;AAAM;;AAAS;;AAC7C;;;;;;AAWA;;AAA4C;;AAAoB;;;;;;AAApB;;AAAA;;;;;;AAHhD;;AACE;;AACA;;AACE;;AACF;;AACF;;;;;;AALK;;AACH;;AAAA;;AAEM;;AAAA;;;;QDlBKC,Y;;;AAKX,4BAAoBC,GAApB,EAA4CC,EAA5C,EAA6D;AAAA;;AAAA;;AAAzC,aAAAD,GAAA,GAAAA,GAAA;AAAwB,aAAAC,EAAA,GAAAA,EAAA;AAJ5C,aAAAN,KAAA,GAAQ,uBAAR;AACA,aAAAO,SAAA,GAAiB,EAAjB;;AAiBO,aAAAC,aAAA,GAAgB,UAACC,OAAD,EAAkBC,KAAlB,EAAoC;AACzD,iBAAO,KAAI,CAACC,MAAL,CAAYC,QAAZ,CAAqBH,OAArB,EAA8BI,QAA9B,CAAuCH,KAAvC,CAAP;AACD,SAFM;AAdwD;;;;mCAEpD;AACT,eAAKI,YAAL;AACA,eAAKC,YAAL;AACD;;;uCAEc;AACb,eAAKJ,MAAL,GAAc,KAAKL,EAAL,CAAQU,KAAR,CAAc;AAC1BlB,oBAAQ,EAAE,CAAC,EAAD,EAAK,CAAC,0DAAWmB,QAAZ,CAAL,CADgB;AAE1BhB,kBAAM,EAAE,CAAC,EAAD,EAAK,CAAC,0DAAWgB,QAAZ,CAAL;AAFkB,WAAd,CAAd;AAID;;;qCAMY;AAAA;;AACX,cAAMC,SAAS,GAAG,KAAKP,MAAL,CAAYQ,KAA9B;;AACA,cAAID,SAAS,CAACpB,QAAV,IAAsB,EAAtB,IAA4BoB,SAAS,CAACjB,MAAV,IAAoB,EAApD,EAAuD;AACrD,iBAAKI,GAAL,CAASe,YAAT,CAAsBF,SAAS,CAACpB,QAAhC,EACGuB,SADH,CACa,UAAAC,IAAI,EAAI;AACjBC,qBAAO,CAACC,GAAR,CAAYF,IAAZ;AACA,kBAAMzB,UAAU,GAAGyB,IAAI,CAAC,IAAD,CAAvB;;AACA,oBAAI,CAACjB,GAAL,CAASoB,UAAT,CAAoB5B,UAApB,EAAgCqB,SAAS,CAACjB,MAA1C,EACGoB,SADH,CACa,UAAAC,IAAI,EAAI;AACjBC,uBAAO,CAACC,GAAR,CAAYF,IAAZ;AACD,eAHH;AAID,aARH;AASD;AACF;;;uCAEc;AAAA;;AACb,eAAKjB,GAAL,CAASU,YAAT,GACGM,SADH,CACa,UAAAC,IAAI,EAAI;AACjB,kBAAI,CAACf,SAAL,GAAiBe,IAAI,CAAC,SAAD,CAArB;;AACA,kBAAI,CAACI,UAAL;AACD,WAJH;AAKD;;;qCAEY;AAAA;;AACX,eAAKnB,SAAL,GAAiB,KAAKA,SAAL,CAAeoB,GAAf,CAAmB,UAAA7B,QAAQ,EAAI;AAC9C,gBAAM8B,OAAO,GAAQ,EAArB;;AACA,kBAAI,CAACvB,GAAL,CAASqB,UAAT,CAAoB5B,QAAQ,CAACL,EAA7B,EACG4B,SADH,CACa,UAAAC,IAAI,EAAI;AAAA;AAAA;AAAA;;AAAA;AACjB,qCAAiBA,IAAjB,8HAA8B;AAAA,sBAAnBO,CAAmB;AAC5BD,yBAAO,CAACE,IAAR,CAAa;AACX5B,wBAAI,EAAE2B,CAAC,CAAC3B;AADG,mBAAb;AAGD;AALgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMlB,aAPH;;AAQEJ,oBAAQ,CAAC8B,OAAT,GAAmBA,OAAnB;AACA,mBAAO9B,QAAP;AACH,WAZgB,CAAjB;AAaD;;;;;;;uBA5DUM,Y,EAAY,wH,EAAA,2H;AAAA,K;;;YAAZA,Y;AAAY,+B;AAAA,e;AAAA,a;AAAA,uX;AAAA;AAAA;ACTzB;;AACE;;AAAM;;AAAW;;AACnB;;AACA;;AAA2B;AAAA,mBAAY,IAAA2B,UAAA,EAAZ;AAAwB,WAAxB;;AAEzB;;AACE;;AACA;;AAGF;;AAEA;;AACE;;AACA;;AAGF;;AAEA;;AACE;;AAAwC;;AAAG;;AAC7C;;AAEF;;AACA;;;;AAvBQ;;AAAA;;AAEF;;AAAA;;AAIS;;AAAA;;AAOA;;AAAA;;AAUe;;AAAA;;;;;;;;;sEDfjB3B,Y,EAAY;cALxB,uDAKwB;eALd;AACT4B,kBAAQ,EAAE,UADD;AAETC,qBAAW,EAAE,sBAFJ;AAGTC,mBAAS,EAAE,CAAC,qBAAD;AAHF,S;AAKc,Q;;;;;;;;;;;;;;;;;;;;;;;;AETzB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAgCaC,S;;;;;YAAAA,S;AAAS,kBAFR,2DAEQ;;;;yBAATA,S;AAAS,O;AAAA,iBAHT,E;AAAE,gBAVJ,CACP,uEADO,EAEP,qEAFO,EAGP,4FAHO,EAIP,0EAJO,EAKP,+EALO,EAMP,sEANO,EAOP,wEAPO,EAQP,kEARO,CAUI;;;;0HAGFA,S,EAAS;AAAA,uBAflB,2DAekB;AAfN,kBAGZ,uEAHY,EAIZ,qEAJY,EAKZ,4FALY,EAMZ,0EANY,EAOZ,+EAPY,EAQZ,sEARY,EASZ,wEATY,EAUZ,kEAVY;AAeM,O;AALC,K;;;;;sEAKVA,S,EAAS;cAjBrB,sDAiBqB;eAjBZ;AACRC,sBAAY,EAAE,CACZ,2DADY,CADN;AAIRC,iBAAO,EAAE,CACP,uEADO,EAEP,qEAFO,EAGP,4FAHO,EAIP,0EAJO,EAKP,+EALO,EAMP,sEANO,EAOP,wEAPO,EAQP,kEARO,CAJD;AAcRC,mBAAS,EAAE,EAdH;AAeRC,mBAAS,EAAE,CAAC,2DAAD;AAfH,S;AAiBY,Q;;;;;;;;;;;;;;;;;;AChCtB;AAAA;;;AAAA;AAAA;AAAA,O,CAAA;AACA;AACA;;;AAEO,QAAMC,WAAW,GAAG;AACzBC,gBAAU,EAAE;AADa,KAApB;AAIP;;;;;;;AAOA;;;;;;;;;;;;;;;;;ACfA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAMA,QAAI,sEAAYA,UAAhB,EAA4B;AAC1B;AACD;;AAED,gFAAyBC,eAAzB,CAAyC,yDAAzC,EACGC,KADH,CACS,UAAAC,GAAG;AAAA,aAAIrB,OAAO,CAACb,KAAR,CAAckC,GAAd,CAAJ;AAAA,KADZ","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiService {\n\n  constructor(private http: HttpClient) { }\n\n  getQuestions() {\n    return this.http.get('/questions');\n  }\n\n  getAnswers(questionID) {\n    return this.http.get(`/questions/${questionID}/answers`);\n  }\n\n  postQuestion(question){\n    return this.http.post('/questions', {\n      title: question,\n    });\n  }\n\n  postAnswer(questionID, answer){\n    return this.http.post(`/questions/${questionID}/answers`, {\n      text: answer,\n    });\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ApiService } from './api.service';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  title = 'Questions and Answers';\n  questions: any = [];\n  myForm: FormGroup;\n\n  constructor(private api: ApiService, public fb: FormBuilder) {}\n\n  ngOnInit() {\n    this.reactiveForm();\n    this.getQuestions();\n  }\n\n  reactiveForm() {\n    this.myForm = this.fb.group({\n      question: ['', [Validators.required]],\n      answer: ['', [Validators.required]],\n    });\n  }\n\n  public errorHandling = (control: string, error: string) => {\n    return this.myForm.controls[control].hasError(error);\n  }\n\n  submitForm() {\n    const formValue = this.myForm.value;\n    if (formValue.question != \"\" && formValue.answer != \"\"){\n      this.api.postQuestion(formValue.question)\n        .subscribe(data => {\n          console.log(data);\n          const questionID = data[\"id\"];\n          this.api.postAnswer(questionID, formValue.answer)\n            .subscribe(data => {\n              console.log(data);\n            });\n        });\n    }\n  }\n\n  getQuestions() {\n    this.api.getQuestions()\n      .subscribe(data => {\n        this.questions = data['content'];\n        this.getAnswers();\n      });\n  }\n\n  getAnswers() {\n    this.questions = this.questions.map(question => {\n      const answers: any = [];\n      this.api.getAnswers(question.id)\n        .subscribe(data => {\n          for (const d of (data as any)){\n            answers.push({\n              text: d.text,\n            });\n          }\n        });\n        question.answers = answers;\n        return question;\n    })\n  }\n}\n","<mat-toolbar>\n  <span>{{ title }}</span>\n</mat-toolbar>\n<form [formGroup]=\"myForm\" (ngSubmit)=\"submitForm()\" novalidate>\n\n  <mat-form-field>\n    <input matInput placeholder=\"Question\" formControlName=\"question\">\n    <mat-error *ngIf=\"errorHandling('question', 'required')\">\n      You must provide a <strong>question</strong>.\n    </mat-error>\n  </mat-form-field>\n\n  <mat-form-field>\n    <input matInput placeholder=\"Answer\" formControlName=\"answer\">\n    <mat-error *ngIf=\"errorHandling('answer', 'required')\">\n      You must provide an <strong>answer</strong>.\n    </mat-error>\n  </mat-form-field>\n\n  <div class=\"button-wrapper\">\n    <button mat-flat-button color=\"primary\">Add</button>\n  </div>\n\n</form>\n<div [className]=\"'question'\" *ngFor=\"let question of questions\">\n  Q: {{ question.title }}\n  <ul>\n    <li *ngFor=\"let answer of question.answers\">A: {{ answer.text }}</li>\n  </ul>\n</div>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatFormFieldModule } from '@angular/material/form-field';\n\nimport { ReactiveFormsModule } from '@angular/forms';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    BrowserAnimationsModule,\n    MatToolbarModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatButtonModule,\n    ReactiveFormsModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}